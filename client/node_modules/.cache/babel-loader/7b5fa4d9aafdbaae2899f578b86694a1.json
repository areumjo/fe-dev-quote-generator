{"ast":null,"code":"var _jsxFileName = \"/Users/areumjo/Documents/devChallenges/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quotes, setQuotes] = useState([]);\n  const [quotesByAuthor, setQuotesByAuthor] = useState([]);\n  useEffect(() => {\n    axios.get('https://quote-garden.herokuapp.com/api/v3/quotes/random').then(res => {\n      console.log(res.data.data); //quoteText, quoteAuthor, QuoteGenre\n\n      setQuotes(res.data.data);\n    });\n  }, []);\n\n  const handleClick = () => {\n    axios.get('https://quote-garden.herokuapp.com/api/v3/quotes/random').then(res => {\n      console.log(res.data.data); //quoteText, quoteAuthor, QuoteGenre\n\n      setQuotes(res.data.data);\n    });\n  };\n\n  const getQuotesByAuthor = authorName => {\n    // https://quote-garden.herokuapp.com/api/v2/authors/Fyodor%20Dostoevsky?page=1&limit=10\n    const author = authorName.replace(/ /g, \"+\"); // \"Bill Gates\" >> \"Bill+Gates\"\n\n    console.log(author);\n    axios.get(`https://quote-garden.herokuapp.com/api/v3/quotes?author=${author}`).then(res => {\n      console.log(res.data.data);\n      setQuotesByAuthor(res.data.data);\n      setQuotes([]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"random\",\n        onClick: handleClick,\n        children: [\"random \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), quotes && quotes.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote\",\n        children: [i[\"quoteText\"], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author-hover-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author\",\n            children: i[\"quoteAuthor\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"genre\",\n            children: i[\"quoteGenre\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"click-emoji\",\n          onClick: () => getQuotesByAuthor(i[\"quoteAuthor\"]),\n          children: \"\\u27A1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, i[\"_id\"], true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), quotesByAuthor && quotesByAuthor.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: i[\"quoteAuthor\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote\",\n        children: [\"d\", i[\"quoteText\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, i[\"_id\"], true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"created by Areum Jo  |  devCallenges.io\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bF6Z63x7a0egty7xMfmb9icpvZM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/areumjo/Documents/devChallenges/client/src/App.js"],"names":["React","useState","useEffect","axios","App","quotes","setQuotes","quotesByAuthor","setQuotesByAuthor","get","then","res","console","log","data","handleClick","getQuotesByAuthor","authorName","author","replace","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\n\nfunction App() {\n\n  const [ quotes, setQuotes ] = useState([]);\n  const [ quotesByAuthor, setQuotesByAuthor ] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('https://quote-garden.herokuapp.com/api/v3/quotes/random')\n      .then(res => {\n        console.log(res.data.data) //quoteText, quoteAuthor, QuoteGenre\n        setQuotes(res.data.data)\n      })\n  }, [])\n\n  const handleClick = () => {\n    axios\n      .get('https://quote-garden.herokuapp.com/api/v3/quotes/random')\n      .then(res => {\n        console.log(res.data.data) //quoteText, quoteAuthor, QuoteGenre\n        setQuotes(res.data.data)\n      })\n  }\n\n  const getQuotesByAuthor = (authorName) => {\n\n    // https://quote-garden.herokuapp.com/api/v2/authors/Fyodor%20Dostoevsky?page=1&limit=10\n    const author = authorName.replace(/ /g, \"+\")// \"Bill Gates\" >> \"Bill+Gates\"\n    console.log(author);\n    axios\n      .get(`https://quote-garden.herokuapp.com/api/v3/quotes?author=${author}`)\n      .then(res => {\n        console.log(res.data.data);\n        setQuotesByAuthor(res.data.data);\n        setQuotes([]);\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <p className=\"random\" onClick={handleClick}>random <span>üîÑ</span></p>\n      </div>\n      {quotes && quotes.map(i =>\n        <div key={i[\"_id\"]}>\n          <p className=\"quote\">{i[\"quoteText\"]} </p>\n          <div className=\"author-hover-box\">\n            <div>\n              <p className=\"author\">{i[\"quoteAuthor\"]}</p>\n              <p className=\"genre\">{i[\"quoteGenre\"]}</p>\n            </div>\n            <span className=\"click-emoji\" onClick={() => getQuotesByAuthor(i[\"quoteAuthor\"])}>‚û°Ô∏è</span>\n          </div>\n        </div>)}\n      {quotesByAuthor && quotesByAuthor.map(i =>\n        <div key={i[\"_id\"]}>\n          <p>{i[\"quoteAuthor\"]}</p>\n          <p className=\"quote\">d{i[\"quoteText\"]}</p>\n        </div>\n      )}\n      <footer>\n        created by Areum Jo  |  devCallenges.io\n      </footer>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}